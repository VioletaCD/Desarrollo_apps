@page "/articulos"
@inject ArticuloServicio articuloServicio
@inject IJSRuntime jsRuntime

<h3>Artículos</h3>

<NavLink class="nav-link" href="articulo/agregar">
    <span class="oi oi-plus" aria-hidden="true">Agregar Artículo</span>
</NavLink>

<div class="row">
    <div class="col-md-6">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Descripción</th>
                    <th>Fecha Alta</th>
                    <th>Cantidad</th>
                    <th>Precio</th>
                    <th>Unidad de Medida</th>
                    <th>Acción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var articulo in articulos)
                {
                    <tr>
                        <td>@articulo.Descripcion</td>
                        <td>@articulo.FechaAlta.ToShortDateString()</td>
                        <td>@articulo.Cantidad</td>
                        <td>@articulo.Precio</td>
                        <td>@articulo.UdeMedida</td>
                        <td>
                            <a href="articulo/editar/@articulo.Id" class="btn btn-success">Editar</a>
                            <button class="btn btn-danger" @onclick="() => BorrarAsync(articulo)">Borrar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="mt-3">
            <p>Total del costo del inventario en pesos: @CalcularTotalCosto().ToString("C")</p>
        </div>
    </div>
</div>

@code {
    private List<Articulo> articulos = new();

    protected override void OnInitialized()
    {
        articulos = articuloServicio.ObtenerTodo();
    }

    private async Task BorrarAsync(Articulo articulo)
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "¿Estás seguro?");
        if (confirmed)
        {
            try
            {
                if (articuloServicio.Borrar(articulo.Id))
                    articulos.Remove(articulo);
            }
            catch (Exception ex)
            {
                // Manejo de errores (puedes mostrar un mensaje de error, loggear, etc.)
                Console.WriteLine($"Error al borrar artículo: {ex.Message}");
            }
        }
    }

    private decimal CalcularTotalCosto()
    {
        return (decimal)articulos.Sum(articulo => articulo.Cantidad * articulo.Precio);
    }
}

